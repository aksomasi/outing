.vc {
  --spv: 3.5;                /* slides per view */
  --gap: 12px;
  --transition-ms: 550ms;

  display: grid;
  grid-template-rows: auto 1fr auto;
  align-items: center;
  width: min(520px, 100%);
  margin: 0 auto;
  user-select: none;
}

.viewport {
  position: relative;
  height: 70vh;               /* mobile-friendly; adjust as needed */
  overflow: hidden;
  perspective: 900px;         /* gives that subtle wheel feel */
  border-radius: 16px;
}

.track {
  position: absolute;
  inset: 0;
  display: grid;
  gap: var(--gap);
  /* Each slideâ€™s height so that exactly --spv are visible */
  grid-auto-rows: calc((100% - (var(--gap) * (var(--spv) - 1))) / var(--spv));

  /* Translate based on current index; add drag offset while swiping */
  transform: translateY(calc(
    ( -1 * var(--index) * (100% / var(--spv)) )
    - (var(--index) * var(--gap))
    + var(--dragY, 0px)
  ));
}

.moving {
  transition: transform var(--transition-ms) cubic-bezier(.2,.7,.2,1);
}

.slide {
  will-change: transform;
  border-radius: 14px;
  overflow: hidden;
  position: relative;

  /* Wheel-like 3D tilt during motion */
  .moving & {
    animation: wheelTilt var(--transition-ms) ease both;
  }
}

@keyframes wheelTilt {
  0%   { transform: rotateX(12deg) translateZ(0); }
  50%  { transform: rotateX(6deg)  translateZ(0); }
  100% { transform: rotateX(0deg)  translateZ(0); }
}

.slide img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;

  /* Subtle depth effect: center slide slightly larger via CSS mask */
  transition: transform 300ms ease;
}

.nav {
  appearance: none;
  border: 0;
  background: rgba(0,0,0,.55);
  color: #fff;
  padding: 10px 14px;
  border-radius: 12px;
  margin: 8px auto;
  cursor: pointer;
  font-size: 18px;
}
.nav:active { transform: translateY(1px); }

/* Responsive: show 3.5 on phones, 4 on larger screens */
@media (min-width: 640px) {
  .vc .track { --spv: 4; }
}
